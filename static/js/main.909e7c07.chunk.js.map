{"version":3,"sources":["api.ts","components/Exchanger/Exchanger.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["getCurrency","a","fetch","currency","json","Exchanger","eur","usd","useState","currencyBuy","setCurrencyBuy","currencySale","setCurrencySale","selectedInput","setSelectedInput","value1","setValue1","value2","setValue2","exchanger","Number","toFixed","useEffect","className","onChange","target","value","placeholder","Header","setCurrency","loadCurrency","cours","USD_BUY","find","item","ccy","buy","EUR_BUY","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.909e7c07.chunk.js","sourcesContent":["const URL = ' https://api.privatbank.ua/p24api/pubinfo?exchange&json&coursid=11';\n\nexport const getCurrency = async () => {\n  const currency = await fetch(URL);\n\n  return currency.json();\n};\n","/* eslint-disable default-case */\nimport React, { useEffect, useState } from 'react';\nimport './Exchanger.scss';\n\ntype Props = {\n  eur: string,\n  usd: string\n};\n\nexport const Exchanger: React.FC<Props> = ({ eur, usd }) => {\n  const [currencyBuy, setCurrencyBuy] = useState('UAN');\n  const [currencySale, setCurrencySale] = useState('UAN');\n  const [selectedInput, setSelectedInput] = useState(0);\n\n  const [value1, setValue1] = useState('');\n  const [value2, setValue2] = useState('');\n\n  const exchanger = () => {\n    if (selectedInput === 1) {\n      switch (currencyBuy) {\n        case 'USD':\n          switch (currencySale) {\n            case 'UAN':\n              setValue2((Number(value1) * Number(usd)).toFixed(2));\n              break;\n\n            case 'USD':\n              setValue2(value1);\n              break;\n\n            case 'EUR':\n              setValue2(((Number(value1) * Number(usd)) / Number(eur)).toFixed(2));\n              break;\n          }\n\n          break;\n\n        case 'UAN':\n          switch (currencySale) {\n            case 'UAN':\n              setValue2(value1);\n              break;\n\n            case 'USD':\n              setValue2((+value1 / +usd).toFixed(2));\n              break;\n\n            case 'EUR':\n              setValue2((+value1 / +eur).toFixed(2));\n              break;\n          }\n\n          break;\n\n        case 'EUR':\n          switch (currencySale) {\n            case 'UAN':\n              setValue2((+value1 * +eur).toFixed(2));\n              break;\n\n            case 'USD':\n              setValue2(((+value1 * +eur) / +usd).toFixed(2));\n              break;\n\n            case 'EUR':\n              setValue2(value1);\n              break;\n          }\n      }\n    }\n\n    if (selectedInput === 2) {\n      switch (currencySale) {\n        case 'USD':\n          switch (currencyBuy) {\n            case 'UAN':\n              setValue1((Number(value2) * Number(usd)).toFixed(2));\n              break;\n\n            case 'USD':\n              setValue1(value2);\n              break;\n\n            case 'EUR':\n              setValue1(((Number(value2) * Number(usd)) / Number(eur)).toFixed(2));\n              break;\n          }\n\n          break;\n\n        case 'UAN':\n          switch (currencyBuy) {\n            case 'UAN':\n              setValue1(value2);\n              break;\n\n            case 'USD':\n              setValue1((+value2 / +usd).toFixed(2));\n              break;\n\n            case 'EUR':\n              setValue1((+value2 / +eur).toFixed(2));\n              break;\n          }\n\n          break;\n\n        case 'EUR':\n          switch (currencyBuy) {\n            case 'UAN':\n              setValue1((+value2 * +eur).toFixed(2));\n              break;\n\n            case 'USD':\n              setValue1(((+value2 * +eur) / +usd).toFixed(2));\n              break;\n\n            case 'EUR':\n              setValue1(value2);\n              break;\n          }\n      }\n    }\n  };\n\n  useEffect(() => {\n    exchanger();\n  }, [currencyBuy, currencySale, value1, value2]);\n\n  return (\n    <div className=\"exchange\">\n      <h2>Обмен валют</h2>\n      <select className=\"exchange__select\" onChange={({ target }) => setCurrencyBuy(target.value)}>\n        <option value=\"UAN\">UAN</option>\n        <option value=\"USD\">USD</option>\n        <option value=\"EUR\">EUR</option>\n      </select>\n      <input\n        className=\"exchange__input\"\n        value={value1}\n        onChange={({ target }) => {\n          setSelectedInput(1);\n          setValue1(target.value);\n          exchanger();\n        }}\n        placeholder=\"0\"\n      />\n      <span>=</span>\n      <input\n        className=\"exchange__input\"\n        value={value2}\n        onChange={({ target }) => {\n          setSelectedInput(2);\n          setValue2(target.value);\n          exchanger();\n        }}\n        placeholder=\"0\"\n      />\n      <select\n        className=\"exchange__select\"\n        onChange={({ target }) => {\n          setCurrencySale(target.value);\n        }}\n      >\n        <option value=\"UAN\">UAN</option>\n        <option value=\"USD\">USD</option>\n        <option value=\"EUR\">EUR</option>\n      </select>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getCurrency } from '../../api';\nimport './Header.scss';\nimport { Exchanger } from '../Exchanger/Exchanger';\n\nexport const Header = () => {\n  const [currency, setCurrency] = useState<Current[]>([]);\n\n  const loadCurrency = async () => {\n    const cours = await getCurrency();\n\n    setCurrency(cours);\n  };\n\n  useEffect(() => {\n    loadCurrency();\n  }, []);\n\n  const USD_BUY: string = Number(currency.find(item => item.ccy === 'USD')?.buy || 0).toFixed(2);\n  const EUR_BUY: string = Number(currency.find(item => item.ccy === 'EUR')?.buy || 0).toFixed(2);\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__actual-course\">\n        <h2>Актуальный курс:</h2>\n        <p className=\"header__usd\">{USD_BUY !== '0.00' ? `USD: ${USD_BUY} UAN` : ''}</p>\n        <p className=\"header__eur\">{EUR_BUY !== '0.00' ? `EUR: ${EUR_BUY} UAN` : ''}</p>\n      </div>\n      <Exchanger usd={USD_BUY} eur={EUR_BUY} />\n    </header>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Header } from './components/Header/Header';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"page\">\n      <Header />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}